// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/open-feature/flagd/pkg/sync/grpc (interfaces: FlagSyncServiceSyncFlagsClient)

// Package grpc is a generated GoMock package.
package mock

import (
	syncv1 "buf.build/gen/go/open-feature/flagd/protocolbuffers/go/sync/v1"
	gomock "github.com/golang/mock/gomock"
	"google.golang.org/grpc"
	reflect "reflect"
)

// MockFlagSyncServiceSyncFlagsClient is a mock of FlagSyncServiceSyncFlagsClient interface
type MockFlagSyncServiceSyncFlagsClient struct {
	ctrl     *gomock.Controller
	recorder *MockFlagSyncServiceSyncFlagsClientMockRecorder
	grpc.ClientStream
}

// MockFlagSyncServiceSyncFlagsClientMockRecorder is the mock recorder for MockFlagSyncServiceSyncFlagsClient
type MockFlagSyncServiceSyncFlagsClientMockRecorder struct {
	mock *MockFlagSyncServiceSyncFlagsClient
}

// NewMockFlagSyncServiceSyncFlagsClient creates a new mock instance
func NewMockFlagSyncServiceSyncFlagsClient(ctrl *gomock.Controller) *MockFlagSyncServiceSyncFlagsClient {
	mock := &MockFlagSyncServiceSyncFlagsClient{ctrl: ctrl}
	mock.recorder = &MockFlagSyncServiceSyncFlagsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFlagSyncServiceSyncFlagsClient) EXPECT() *MockFlagSyncServiceSyncFlagsClientMockRecorder {
	return m.recorder
}

// Recv mocks base method
func (m *MockFlagSyncServiceSyncFlagsClient) Recv() (*syncv1.SyncFlagsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Recv")
	ret0, _ := ret[0].(*syncv1.SyncFlagsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Recv indicates an expected call of Recv
func (mr *MockFlagSyncServiceSyncFlagsClientMockRecorder) Recv() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Recv", reflect.TypeOf((*MockFlagSyncServiceSyncFlagsClient)(nil).Recv))
}
